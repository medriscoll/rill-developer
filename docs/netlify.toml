# Settings in the [build] context are global and are applied to 
# all contexts unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  # If not set, defaults to the root directory.
  # base = "docs"

  # Directory that contains the deploy-ready HTML files and 
  # assets generated by the build. This is relative to the base
  # directory if one has been set, or the root directory if 
  # a base has not been set. This sample publishes the directory 
  # located at the absolute path "root/project/build-output"
  
  publish = "dist"

  # Default build command.
  command = "npm install && npm run build"

# [[plugins]]
#   # Installs the Lighthouse Build Plugin for all deploy contexts
#   package = "@netlify/plugin-lighthouse"

# Production context: all deploys from the Production branch 
# set in your site’s Branches settings in the UI will inherit 
# these settings. You can define environment variables 
# here but we recommend using the Netlify UI for sensitive
# values to keep them out of your source repository. 
[context.production]
  publish = "dist"
  command = "npm install && npm run build"
  environment = { NODE_VERSION = "16.15.1" }

# Deploy Preview context: all deploys generated from
# a pull/merge request will inherit these settings.
[context.deploy-preview]
  publish = "dist"

# Here is an example of how to define context-specific 
# environment variables. Be mindful when using this 
# option and avoid committing sensitive values to public 
# source repositories.
# [context.deploy-preview.environment]
#   NOT_PRIVATE_ITEM = "not so secret"

# Branch Deploy context: all deploys that are not from
# a pull/merge request or from the Production branch 
# will inherit these settings.
[context.branch-deploy]
  command = "echo branch"
[context.branch-deploy.environment]
  NODE_ENV = "development"

# Specific branch context: all deploys from 
# this specific branch will inherit these settings.
[context.staging] # “staging” is a branch name
  command = "echo 'staging'"
  base = "staging"

# For contexts of branches with special characters, 
# enclose the branch name with quotes.
[context."feat/branch"]
  command = "echo 'special branch'"
  base = "branch"

# Redirects and headers are GLOBAL for all builds – they do not 
# get scoped to contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files,
# which are PER-DEPLOY.

# A basic redirect rule
# [[redirects]]
#   from = "/*"
#   to = "/blog/:splat"

# A redirect rule with many of the supported properties
# [[redirects]]
#   from = "/old-path"
#   to = "/new-path"

#   # The default HTTP status code is 301, but you can 
#   # define a different one.
#   status = 302

#   # By default, redirects won’t be applied if there’s a file 
#   # with the same path as the one defined in the `from` property.
#   # Setting `force` to `true` will make the redirect rule
#   # take precedence over any existing files.
#   force = true

#   # Redirect from /old-path?id=123 to /new-path. 
#   # Each combination of query params needs to be 
#   # defined in a separate [[redirects]] block.
#   # More information at https://docs.netlify.com/routing/redirects/redirect-options/#query-parameters
#   query = {id = ":id"}

#   # Redirect based on conditions including browser language, 
#   # geolocation, identity role, and/or cookie presence.
#   conditions = {Language = ["en"], Country = ["US"]}

#   # Sign each request with a value defined in an environment variable
#   signed = "API_SIGNATURE_TOKEN"

#   # You can also define custom headers within your redirects blocks.
#   [redirects.headers]
#     X-From = "Netlify"
#     X-Api-Key = "some-api-key-string"

# Redirects for role-based access control don’t use the 'to' property.
# [[redirects]]
#   from = "/gated-path"
#   status = 200
#   conditions = {Role = ["admin"]}
#   force = true

# The following redirect is intended for use with most SPAs 
# that handle routing internally.
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

[[redirects]]
	from = "/docs/introduction"
	to = "https://enterprise.rilldata.com/docs/introduction"
	status = 301

[[redirects]]
	from = "/docs/core-concepts"
	to = "https://enterprise.rilldata.com/docs/core-concepts"
	status = 301

[[redirects]]
	from = "/docs/processing-batch-data"
	to = "https://enterprise.rilldata.com/docs/processing-batch-data"
	status = 301

[[redirects]]
	from = "/docs/aws-s3-bucket"
	to = "https://enterprise.rilldata.com/docs/aws-s3-bucket"
	status = 301

[[redirects]]
	from = "/docs/gcs-bucket"
	to = "https://enterprise.rilldata.com/docs/gcs-bucket"
	status = 301

[[redirects]]
	from = "/docs/google-bigquery"
	to = "https://enterprise.rilldata.com/docs/google-bigquery"
	status = 301

[[redirects]]
	from = "/docs/azure-storage-container"
	to = "https://enterprise.rilldata.com/docs/azure-storage-container"
	status = 301

[[redirects]]
	from = "/docs/tutorial-druid-ingestion"
	to = "https://enterprise.rilldata.com/docs/tutorial-druid-ingestion"
	status = 301

[[redirects]]
	from = "/docs/ingesting-from-big-query"
	to = "https://enterprise.rilldata.com/docs/ingesting-from-big-query"
	status = 301

[[redirects]]
	from = "/docs/process-streaming-data"
	to = "https://enterprise.rilldata.com/docs/process-streaming-data"
	status = 301

[[redirects]]
	from = "/docs/connecting-with-kafka"
	to = "https://enterprise.rilldata.com/docs/connecting-with-kafka"
	status = 301

[[redirects]]
	from = "/docs/tutorial-kafka-ingestion"
	to = "https://enterprise.rilldata.com/docs/tutorial-kafka-ingestion"
	status = 301

[[redirects]]
	from = "/docs/metadata-lookups"
	to = "https://enterprise.rilldata.com/docs/metadata-lookups"
	status = 301

[[redirects]]
	from = "/docs/data-ingestion-best-practices-1"
	to = "https://enterprise.rilldata.com/docs/data-ingestion-best-practices-1"
	status = 301

[[redirects]]
	from = "/docs/getting-access-to-rill-dashboards"
	to = "https://enterprise.rilldata.com/docs/getting-access-to-rill-dashboards"
	status = 301

[[redirects]]
	from = "/docs/getting-started"
	to = "https://enterprise.rilldata.com/docs/getting-started"
	status = 301

[[redirects]]
	from = "/docs/alerting"
	to = "https://enterprise.rilldata.com/docs/alerting"
	status = 301

[[redirects]]
	from = "/docs/scheduled-exports"
	to = "https://enterprise.rilldata.com/docs/scheduled-exports"
	status = 301

[[redirects]]
	from = "/docs/bookmarking"
	to = "https://enterprise.rilldata.com/docs/bookmarking"
	status = 301

[[redirects]]
	from = "/docs/facet-pivot-table-splits"
	to = "https://enterprise.rilldata.com/docs/facet-pivot-table-splits"
	status = 301

[[redirects]]
	from = "/docs/explore-admin"
	to = "https://enterprise.rilldata.com/docs/explore-admin"
	status = 301

[[redirects]]
	from = "/docs/adding-users"
	to = "https://enterprise.rilldata.com/docs/adding-users"
	status = 301

[[redirects]]
	from = "/docs/admin-security"
	to = "https://enterprise.rilldata.com/docs/admin-security"
	status = 301

[[redirects]]
	from = "/docs/create-an-external-dashboard"
	to = "https://enterprise.rilldata.com/docs/create-an-external-dashboard"
	status = 301

[[redirects]]
	from = "/docs/explore-json-examples"
	to = "https://enterprise.rilldata.com/docs/explore-json-examples"
	status = 301

[[redirects]]
	from = "/docs/embedding-explore"
	to = "https://enterprise.rilldata.com/docs/embedding-explore"
	status = 301

[[redirects]]
	from = "/docs/authenticating-integrated-applications"
	to = "https://enterprise.rilldata.com/docs/authenticating-integrated-applications"
	status = 301

[[redirects]]
	from = "/docs/api-password"
	to = "https://enterprise.rilldata.com/docs/api-password"
	status = 301

[[redirects]]
	from = "/docs/service-accounts"
	to = "https://enterprise.rilldata.com/docs/service-accounts"
	status = 301

[[redirects]]
	from = "/docs/api-access"
	to = "https://enterprise.rilldata.com/docs/api-access"
	status = 301

[[redirects]]
	from = "/docs/jdbc-connection"
	to = "https://enterprise.rilldata.com/docs/jdbc-connection"
	status = 301

[[redirects]]
	from = "/docs/jupyter"
	to = "https://enterprise.rilldata.com/docs/jupyter"
	status = 301

[[redirects]]
	from = "/docs/looker"
	to = "https://enterprise.rilldata.com/docs/looker"
	status = 301

[[redirects]]
	from = "/docs/superset"
	to = "https://enterprise.rilldata.com/docs/superset"
	status = 301

[[redirects]]
	from = "/docs/tableau"
	to = "https://enterprise.rilldata.com/docs/tableau"
	status = 301

[[redirects]]
	from = "/docs/aws-private-link"
	to = "https://enterprise.rilldata.com/docs/aws-private-link"
	status = 301

[[redirects]]
	from = "/docs/aws-encryption"
	to = "https://enterprise.rilldata.com/docs/aws-encryption"
	status = 301

[[redirects]]
	from = "/docs/faq"
	to = "https://enterprise.rilldata.com/docs/faq"
	status = 301

[[redirects]]
	from = "/docs/contact-support"
	to = "https://enterprise.rilldata.com/docs/contact-support"
	status = 301


# [[headers]]
#   # Define which paths this specific [[headers]] block will cover.
#   for = "/*"

#   [headers.values]
#     X-Frame-Options = "DENY"
#     X-XSS-Protection = "1; mode=block"
#     Content-Security-Policy = "frame-ancestors https://www.facebook.com"

#     # Multi-value headers are expressed with multi-line strings.
#   cache-control = '''
#   max-age=0,
#   no-cache,
#   no-store,
#   must-revalidate'''

#     # Basic-Auth allows you to password protect your whole site.
#     # This feature may not be available on all plans.
#     Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"

# [functions]
#   # Directory with serverless functions, including background 
#   # functions, to deploy. This is relative to the base directory
#   # if one has been set, or the root directory if
#   # a base hasn’t been set.
#   directory = "functions/"
  
